!function(e){var o={};function r(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=o,r.d=function(e,o,t){r.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,o){if(1&o&&(e=r(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var n in e)r.d(t,n,function(o){return e[o]}.bind(null,n));return t},r.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(o,"a",o),o},r.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},r.p="",r(r.s=0)}([function(e,o,r){"use strict";r.r(o),r.d(o,"Director",(function(){return t})),r.d(o,"Teacher",(function(){return n})),r.d(o,"createEmployee",(function(){return u})),r.d(o,"isDirector",(function(){return c})),r.d(o,"executeWork",(function(){return i}));var t=function(){function e(){}return e.prototype.workFromHome=function(){return"Working from home"},e.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},e.prototype.workDirectorTasks=function(){return"Getting to director tasks"},e}(),n=function(){function e(){}return e.prototype.workFromHome=function(){return"Cannot work from home"},e.prototype.getCoffeeBreak=function(){return"Cannot have a break"},e.prototype.workTeacherTasks=function(){return"Getting to work"},e}(),u=function(e){return"number"==typeof e&&e<500?new n:new t},c=function(e){return void 0!==e.workDirectorTasks},i=function(e){return c(e)?e.workDirectorTasks():e.workTeacherTasks()},f=function(e){return"Math"===e?"Teaching Math":"Teaching History"};console.log(u(200)),console.log(u(1e3)),console.log(u("$500"));var a=u(501);console.log(typeof a),console.log(a.getCoffeeBreak()),console.log(a.workFromHome());var l=u(400);console.log(typeof l),console.log(i(u(200))),console.log(i(u(1e3))),console.log(f("Math")),console.log(f("History"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,